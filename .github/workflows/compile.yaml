- name: Generate PDFs and Screenshots
  env:
    REPO_NAME: ${{ github.repository }}
  run: |
    # Wait for GitHub Pages to be ready
    sleep 60

    # Read the changed files
    CHANGED_FILES="${{ steps.changed-files.outputs.files }}"
    
    for file in $CHANGED_FILES; do
      if [[ "$file" =~ presentations/.*/.*\.html$ ]]; then
        # Extract directory and filename
        dir=$(dirname "$file")
        filename=$(basename "$file" .html)
        
        # Construct proper URL with nested path
        url="https://${{ github.repository_owner }}.github.io/${REPO_NAME#*/}/$file"
        
        echo "Processing $url"
        
        # Create output directories inside presentation folder
        mkdir -p "$dir/pdf"
        mkdir -p "$dir/png"
        
        # Generate PDF with 1920x1080 resolution
        decktape reveal --chrome-arg="--no-sandbox" --size 1920x1080 "$url" "$dir/pdf/${filename}.pdf"
        
        # Generate screenshots with 1920x1080 resolution and custom naming
        decktape reveal --chrome-arg="--no-sandbox" --size 1920x1080 "$url" "temp.pdf" --screenshots --screenshots-directory "$dir/png"
        
        # Rename screenshot files
        cd "$dir/png"
        for f in temp_*_1920x1080.png; do
          num=$(echo $f | sed 's/temp_\([0-9]*\)_1920x1080.png/\1/')
          mv "$f" "slide_$(printf %02d $num)_1920x1080.png"
        done
        cd - >/dev/null
        rm temp.pdf
      fi
    done

- name: Commit and push changes
  run: |
    git config --global user.name "GitHub Actions Bot"
    git config --global user.email "actions@github.com"
    if [[ -n "$(git status --porcelain)" ]]; then
      git add .
      git commit -m "Add generated PDFs and screenshots"
      git pull --rebase
      git push
    else
      echo "No changes to commit"
    fi
